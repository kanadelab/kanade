＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
＃
＃　　　奏でる日常の音色　独自関数辞書
＃
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃

＃　変数設定関数
＃　ssu.dllを使用するべきだけど無害そうなのでこのまま。

＊変数セット
＄（Ａ０）	（Ａ１）

＊変数セット数値
＄（Ａ０）＝（Ａ１）

＊OnSwitchReturn
＄（Ｒ０）	（when,（（Ｒ０））==（Ｒ１）,（Ｒ２）,（Ｒ１））
＞（Ｒ３）

＊OnSetReturn
＄（Ｒ０）	（Ｒ１）
＞（Ｒ２）

＃
＊OnSwitchEnableReturn
＄（Ｒ０）	（when,（（Ｒ０））==有効,無効,有効）
＞（Ｒ１）

＃　クイックセッション関数
＃　\_qよりこちらを多用したい

＠クイックセッション
\0\![quicksession,true]

＠クイックセッション無効化
\0\![quicksession,false]


＃　終了関数
＃　スクリプトを終了したいときのジャンプ先として使用

＊処理終了

＠文字色
\f[color,（Ａ０）]

＠文字色デフォルト
\f[color,default]

＃　セパレータ

＠b5
（sprintf,%c,5）



＃　起動時の下着ランダム設定

＊下着設定
＄めくれ	\s[40]
＄たくし上げ１	\s[45]
＄たくし上げ２	\s[46]
＄たくし上げ３	\s[47]

＊下着設定
＄めくれ	\s[59]
＄たくし上げ１	\s[71]
＄たくし上げ２	\s[72]
＄たくし上げ３	\s[73]

＊下着設定
＄めくれ	\s[56]
＄たくし上げ１	\s[74]
＄たくし上げ２	\s[75]
＄たくし上げ３	\s[76]

＊下着設定
＄めくれ	\s[57]
＄たくし上げ１	\s[77]
＄たくし上げ２	\s[78]
＄たくし上げ３	\s[79]

＊下着設定
＄めくれ	\s[58]
＄たくし上げ１	\s[80]
＄たくし上げ２	\s[81]
＄たくし上げ３	\s[82]

＊下着設定
＄めくれ	\s[83]
＄たくし上げ１	\s[84]
＄たくし上げ２	\s[85]
＄たくし上げ３	\s[86]

＊下着設定
＄めくれ	\s[87]
＄たくし上げ１	\s[88]
＄たくし上げ２	\s[89]
＄たくし上げ３	\s[90]


＃　上限付き好感度上昇関数・好感度加工関数

＊好感度アップ
＄起動毎好感度＝（起動毎好感度）＋１
＞処理終了	（起動毎好感度）＞２０
＄好感度＝（好感度）＋１

＊好感度ダウン
＄起動毎好感度＝（起動毎好感度）-１
＞処理終了	（起動毎好感度）＜-１０
＄好感度＝（好感度）-1


＃　好感度・特殊モードチェック
＠モード判断
（when,（好感度）>５０,（when,（好感度）>２００,（when,（好感度）>５００,通常４,通常３）,通常２）,通常１）

＠通常判断
（count,（特殊モード）,無効）==1


＃　バルーンツールチップ
＃　今は設定のみ。

＠喋り頻度.balloon_tooltip
ゴーストが自動でトークする間隔の設定です。

＠メニューモード変更.balloon_tooltip
（メインメニューモード（メインメニューモード）説明）

＠メインメニューモード簡単説明
メニューを表示する時の表示形式を変更します。\n簡単:ゴーストとしての最小限の機能を表示します。

＠メインメニューモード詳細説明
メニューを表示する時の表示形式を変更します。\n詳細:大きいサイズのバルーンで多くの機能を表示します。

＠コミュ拍手送信設定.balloon_tooltip
未対応のコミュニケートが入力された場合に\nリクエストとして自動的に作者に送信する設定です。

＠ユーザ名変更.balloon_tooltip
奏がユーザの名前を呼ぶときに使う呼び名です。

＠ランチャ設定開始.balloon_tooltip
ランチャとブックマークの編集、設定をします。

＠右リボンつつかれ設定.balloon_tooltip
右のリボンをダブルクリックした際に実行する機能を登録します。

＠左リボンつつかれ設定.balloon_tooltip
左のリボンをダブルクリックした際に実行する機能を登録します。

＠天気予報地方選択.balloon_tooltip
天気予報の情報を取得する地域を設定します。

＠更新チェック設定.balloon_tooltip
このゴーストに更新があるか自動的に確認をするかどうかの設定です。

＠メニューカスタマイズ.balloon_tooltip
詳細メニューの機能欄に表示する項目を設定します。



＃トランスレータ

＊OnTranslate
＄引数区切り追加	（sprintf,%c,6）
＄出力スクリプト	（Ｒ０）
＄出力スクリプト	（core（sprintf,%c,6）translate（sprintf,%c,6）（出力スクリプト））
＄出力スクリプト	（when,（ボクっ娘）==有効,（replace（sprintf,%c,6）（出力スクリプト）（sprintf,%c,6）私（sprintf,%c,6）ボク）,（出力スクリプト））
：（出力スクリプト）＃\e（core,get_last_transtale_log）

＠現在季節	（現在月）==１||（現在月）==２||（現在月）==３||（現在月）==１２
冬

＠現在季節	（現在月）==４||（現在月）==５||（現在月）==６
春

＠現在季節	（現在月）==７||（現在月）==８||（現在月）==９
夏

＠現在季節	（現在月）==１０||（現在月）==１１
秋

＠イベントモード判断
（when,（特殊モード）==hanami,1,0）

＊イベントモードを戻す	（イベントモード判断）
＄特殊モード名前	（変更前特殊モード名前）
＄特殊モード	（変更前特殊モード）

＃起動時と終了時にすること。
＊辞書フォルダ設定	（通常判断）
＄辞書フォルダ	.,normal,no_events

＊辞書フォルダ設定	（特殊モード）==ds
＄辞書フォルダ	.,ds,no_events

＊辞書フォルダ設定	（特殊モード）==yd
＄辞書フォルダ	.,yd,no_events

＊辞書フォルダ設定	（特殊モード）==hanami
＄辞書フォルダ	.,normal,sakura

＊梅雨の季節
（現在月）==6
＠コミュ終了
（when,（特定コミュで終了）!=無効,\-）
＊OnStartParticle
＄nop	（when,（SAORI「particle」の存在）==0,（load_saori,particle,saori/particle.dll,window））（particle,（ssu,zen2han,（本体ハンドル0））,（ssu,zen2han,（バルーンハンドル0）））


＠今は深夜
(（現在時）<4&&（現在時）>=23)

＠今は早朝
(（現在時）<7&&（現在時）>=4)

＠今は朝
(（現在時）<10&&（現在時）>=7)

＠今は昼
(（現在時）<16&&（現在時）>=10)

＠今は夕方
(（現在時）<18&&（現在時）>=16)

＠今は夜
(（現在時）<23&&（現在時）>=18)